version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11

jobs:
  test:
    docker:
      - image: circleci/python:3.7
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          CELERY_BROKER_URL: redis://redis:6379/0
      - image: circleci/postgres:10.3
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
      - image: circleci/redis:5.0
    steps:
      - checkout
      - run:
          name: Calculate checksum of the dependencies
          command: |
            shasum requirements/* > /tmp/checksum.tmp
      - restore_cache:
          key: dependencies-{{ checksum "/tmp/checksum.tmp" }}
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - save_cache:
          key: dependencies-{{ checksum "/tmp/checksum.tmp" }}
          paths:
            - "venv"
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            mypy sprints
            coverage run -m pytest
            coverage report

  build_backend:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build and push Docker image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
            docker-compose -f production.yml build
            docker-compose -f production.yml push

  build_frontend:
    docker:
      - image: node:11.15-alpine
    steps:
      - checkout
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - run:
          name: Change directory
          command: "cd frontend"
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build React frontend
          command: "npm run build && cd .."
      - persist_to_workspace:
          root: build
          paths:
            - .

  deploy_frontend:
    docker:
      - image: aws
    steps:
      - attach_workspace:
          at: build
      - aws-s3/sync:
          from: build/
          to: "s3://$AWS_S3_BUCKET/frontend"
          overwrite: true

  deploy_backend:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: Deploy backend
          command: |
            ssh -o StrictHostKeyChecking=no $HOST_USERNAME@$HOSTNAME "/bin/bash ./deploy.sh"

workflows:
  version: 2
  main:
    jobs:
      - test

      - build_backend:
          requires:
            - test
          filters:
            branches:
              only: agrendalath/bb-1247-production
      - build_frontend:
          requires:
            - test
          filters:
            branches:
              only: agrendalath/bb-1247-production

      - deploy_backend:
          requires:
            - build_backend
            - build_frontend
      - deploy_frontend:
          requires:
            - build_backend
            - build_frontend
